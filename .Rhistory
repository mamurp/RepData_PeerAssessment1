packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500 , r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:id_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cdran3
cran3
mutate(cran3,size_mb = size/ 2^20)
mutate(cran3,size_mb = size/ 2^20, size_gb = size_mb/2^10)
mutate(cran2, correct_size = size+1000)
mutate(cran3, correct_size = size+1000)
summarize(cran, avg_bytes = mean(size))
q()
library("swirl")
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages("ggplot2")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm)
boxplot(ppm, col='blue')
abline(h=12)
hist(ppm, col='green')
rug(ppm)
low
high
hist(ppm, col='green', breaks = 100)
rug(ppm)
hist(ppm, col='green')
abline(v=12, lwd=2)
abline(v=median(ppm),col='magenta' lwd=4)
abline(v=median(ppm),col='magenta', lwd=4)
names(pollution)
reg <- pollution$region
reg <- table(pollution$region)
reg
barplot(reg, col='wheat', main="Number of Counties in Each Region")
boxplot(pollution, pm25~region, col='red')
?boxplot
boxplot(pm25~region,pollution, col='red')
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset(pollution, reg="east")
east <- subset(pollution, region=="east")
head(east)
hist(east$pm25,col='green')
hist(subset(pollution,region=='west')$pm25,col='green')
plot(latitude, pm25)
pollution
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2,lty=2)
plot(pollution$latitude, ppm, col=pollutant$region)
plot(pollution$latitude, pollution$ppm, col=pollution$region)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow=c(1,2),mar=c(5,4,2,1))
west <- subset(pollution, region=="west")
plot(west$latitude, west$pm25, main="West")
plot(east$latitude, east$pm25, main="East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful")
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
title(main="Old Faithful Geyser data")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, file="geyserplot.png")
dev.off()
q()
library("swirl")
swirl()
head(airquality)
xyplot(Ozone~wind , data=airquality)
xyplot(Ozone~Wind , data=airquality)
xyplot(Ozone~Wind , data=airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data=airquality, layout=c(5,1))
xyplot(Ozone~Wind | Month, data=airquality, layout=c(5,1))
p <- xyplot(Ozone~Wind, data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x| layout = c(2,1))
xyplot(y~x|f, layout = c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(prcie~carat|color*cut, data=diamonds, strip=FALSEm pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(prcie~carat|color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat|color*cut, data=diamonds, strip=FALSEm pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat|color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat|color*cut, data=diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
q()
q()
library("swirl")
rm(list=ls())
swirl()
sample(colors(),10)
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6)
)
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue", "green"),alpha=.5)
p3(5)
plot(x,y, pch=19, col=rgb(0,.5,.5))
plot(x,y, pch=19, col=rgb(0,.5,.5,.3))
cols <- brewer.pal(3,"BuGn")
showMe(cols)
pal <- colorRampPalette(cols())
pal <- colorRampPalette(cols
)
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
swirl()
str(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, color=drv,data=mpg)
qplot(displ, hwy, color=drv,geom=c("point","smooth"),data=mpg)
qplot(y=hwy,data=mpg, color=drv)
myhigh
qplot(drv,hwy, data=mpg, geom="boxplot")
qplot(drv,hwy, data=mpg, geom="boxplot", color=manufactuer)
qplot(drv,hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy. data=mpg, fill=drv)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets=.~drv)
qplot(hwy, data=mpg, facets=drv`., binwidth=2)
)
qplot(hwy, data=mpg, facets=drv~., binwidth=2)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?trellis.par.set()
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
ls()
g <- ggplot2(movies, aes(votes, rating))
?ggplot
class(movies)
qplot(votes, rating, data = movies)
library(ggplot)
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
?qplot
?smooth
data(movies)
swirl()
qplot(disp, hwy, data=mpg, geom=c("point","smooth"), facets=.~drv, method="loess")
?qplot
ggplot(disp, hwy, data=mpg, geom=c("point","smooth"), facets=.~drv, method="loess")
ggplot(displ, hwy, data=mpg, geom=c("point","smooth"), facets=.~drv, method="loess")
?ggplot
qplot(displ, hwy, data=mpg, geom=c("point","smooth"), facets=.~drv, method="loess")
?qplot
?loess
qplot(displ, hwy, data=mpg, geom=c("point","smooth"), facets=.~drv)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
swirl()
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"), facets=.~drv, method="loess")
ggplot(displ, hwy, data = mpg, geom=c("point", "smooth"), facets=.~drv, method="loess")
qplotReal <- qplot # Copies the function
qplot <- function(...,method="deprecated"){
qplotReal(...)
}
ggplot(displ, hwy, data = mpg, geom=c("point", "smooth"), facets=.~drv, method="loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"), facets=.~drv, method="loess")
skip()
g <-ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
(g+geom_point)+geom_smooth()
(g+geom_point())+geom_smooth()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("SWirl Rules!")
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)+ ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4, alpha=1/2)+geom_smooth(method="lm") + facet_grid(.~drv)+ ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(labs(title="Swirl Rules!"),aes(color=drv),labs(x="Displacement", y="Hwy Mileage"))
g+geom_point(aes(color=drv))+labs(x="Displacement", y="Hwy Mileage")+labs(title="Swirl Rules!")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv),size=2, alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm", se=FALSE)
g+ geom_point(color=drv)+theme_bw(base_family="Times")
g+ geom_point(aes(color=drv))+theme_bw(base_family="Times")
plot(myx,myy,type="l",ylim=c(-3,3))
g <- ggplot(testdat, aes(x=myx, y=myy))
g <- geom_line()
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g + geom_point()
g + geom_point()+facet_grid(drv~cyl,margins=TRUE)
g + geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g + geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
rm(qplot)
library(ggplot2)
q()
library("swirl")
rm(list=ls())
swirl()
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds. bindwidth=18497/30)
qplot(price, data=diamonds. binwidth=18497/30)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density",color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom=c("point","smooth"), method="lm")
?plot
qplot
?qplot
skip()
q()
library("swirl")
rm(list=ls())
swirl()
swirl()
swirl()
dim(ssd)
names(ssd[562:563])
ssd$subject
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(x[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd (scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12], maxCon)
mdist <- dist(c(sub1[,10:12], maxCon))
mdist <- dist( c(sub1[,10:12], maxCon))
skip()
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers=6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers=6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19, ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19, ylab="Walkdown Cluster")
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <-pm0$Sample.Value
str(x0)
is.na(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0), log10(x1))
negative(x1<0)
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dats)
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both<- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code==36 & county.site  %in% both)
cnt1 <- subset(pm1, State.Code==36 & county.site  %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0$Sample.Value
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
q()
getwd()
setwd("~/ExploreGraph")
source("rrq1.R")
source("rrq1.R")
getwd()
setwd("./")
getwd()
setwd("C:/Users/John/Documents/GitHub")
dir()
setwd("C:/Users/John/Documents/GitHub/RepData_PeerAssessment1")
dir()
setwd("C:/Users/John/Documents/GitHub/RepData_PeerAssessment1/activity")
dir()
getwd()
dir()
setwd("C:/Users/John/Documents/GitHub/RepData_PeerAssessment1/")
dir()
source("rrq1.R")
source("rr1q1.R")
act1 <- act
act1 <- transform(act1, date = factor(date))
totstep <- sapply(split(act1$steps, act1$date), sum, na.rm=TRUE)
## histogram of total number of steps each day
hist(totstep, breaks = c(0,2500,5000,7500,10000,12500,15000,17500,20000,22500,25000))
?hist
hist(totstep, breaks = c(0,2500,5000,7500,10000,12500,15000,17500,20000,22500,25000), xname="Total number of steps per day")
hist(totstep, breaks = c(0,2500,5000,7500,10000,12500,15000,17500,20000,22500,25000), title="Total number of steps per day")
warnings()
?hist
hist(totstep, breaks = c(0,2500,5000,7500,10000,12500,15000,17500,20000,22500,25000), main ="Total number of steps per day")
?hist
hist(totstep, breaks = c(0,2500,5000,7500,10000,12500,15000,17500,20000,22500,25000), main ="Total number of steps per day", xlab = "Steps")
spsteps = split(act1$steps,act1$interval)
spsteps
spcount=lapply(spsteps,sum, na.rm=TRUE)
spcount
intsteps <- tapply(act1$steps, act1$interval, mean, na.rm=TRUE)
intsteps
plot(timser$interval, timser$average, type="l")
timser <- data.frame(interval = names(intsteps), average = intsteps)
plot(timser$interval, timser$average, type="l")
t <- which.max(intsteps)
intsteps[t]
class(intsteps[t])
which(is.na(act1))
sum(is.na(act1))
act1[17560,]
act1[which(is.na(act1)),4]
t <- which(is.na(act1))
t
act[t,4]
act1[t,4]
t <- which(is.na(act1$steps))
act1[t,4]
which(is.na(act1$steps))
class(t)
t[4]
t[56]
act1$steps[which(is.na(act1$steps))]
act1$steps[which(is.na(act1$steps))] <- mean(act1$steps, na.rm=TRUE)
head(act1)
tail(act1)
act1[20:30,]
act1[200:230,]
act1[2200:2230,]
intsteps
class(intsteps)
class(timser)
head(timser)
?data.frame
t[1,23]
t(1)
t(2300)
?seq_along
for (i in seq_along(t)) {
print i
}
for (i in seq_along(t) print i)
for (i in seq_along(t) i)
seq_along(t)
for ( i in seq_along(t))
)
for ( i in seq_along(t)){}
for ( i in seq_along(t)){i}
for ( i in seq_along(t)){print i}
for ( i in seq_along(t)){print t}
t
?gsub
act1 <- act
head(act1)
tail(act1)
act1[20:30,]
act1[220:230,]
act1[2220:2230,]
act1[2420:2430,]
act1$steps[which(is.na(act1$steps))] <- mean(act1$steps, na.rm=TRUE)
act1[2420:2430,]
tapply(act1$steps, act1$interval, replace, is.na(steps), mean. na.rm=TRUE)
tapply(act1$steps, act1$interval, replace, is.na(steps), mean, na.rm=TRUE)
tapply(act1$steps, act1$interval, replace, is.na(steps), mean)
tapply(act1$steps, act1$interval, replace,
0)
tapply(act1$steps, act1$interval, replace, act1$steps==NA, mean(act1$steps)
)
act1 <- act
?grep
library("reshape2")
act2 <- dcast(act1, date~interval, value.var="steps")
head(act2)
?colMeans
colMeans(act2)
colMeans(act2[,2])
class(act2)
mean(act2[,3])
mean(act2[,3], na.rm=TRUE)
is.na(act2[,3])
source("replacena.R")
act2
which(is.na(act2))
head(act2)
act2[1:6,1:6]
sum(act2[3,2:289])
sum(act2[,2:289])
sum(act2[1:61,])
sum(act2[1:61,3])
?by
by(act2, sum)
by(act2, date, sum)
colMeans(act2)
colMeans(act2[,2:289])
cmean <- colMeans(act2[,2:289])
class(cmean)
names(cmean)
?weekdays
weekdays(act2[4,1])
weekdays(act2[6,1])
